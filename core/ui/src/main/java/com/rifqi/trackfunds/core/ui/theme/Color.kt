package com.rifqi.trackfunds.core.ui.theme

import androidx.compose.ui.graphics.Color

val primaryLight = Color(0xFF060607)
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFF1F1F1F)
val onPrimaryContainerLight = Color(0xFF888686)
val secondaryLight = Color(0xFF494949)
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFF616161)
val onSecondaryContainerLight = Color(0xFFDEDCDC)
val tertiaryLight = Color(0xFF146A5F)
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFF91DDCF)
val onTertiaryContainerLight = Color(0xFF056358)
val errorLight = Color(0xFF840015)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFB00020)
val onErrorContainerLight = Color(0xFFFFBBB8)
val backgroundLight = Color(0xFFFCF8F8)
val onBackgroundLight = Color(0xFF1C1B1B)
val surfaceLight = Color(0xFFF0EDED)
val onSurfaceLight = Color(0xFF1C1B1B)
val surfaceVariantLight = Color(0xFFE0E3E3)
val onSurfaceVariantLight = Color(0xFF444748)
val outlineLight = Color(0xFF747878)
val outlineVariantLight = Color(0xFFC4C7C7)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF313030)
val inverseOnSurfaceLight = Color(0xFFF4F0EF)
val inversePrimaryLight = Color(0xFFC8C6C5)
val surfaceDimLight = Color(0xFFDDD9D9)
val surfaceBrightLight = Color(0xFFFCF8F8)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val surfaceContainerLowLight = Color(0xFFF7F3F2)
val surfaceContainerLight = Color(0xFFF1EDEC)
val surfaceContainerHighLight = Color(0xFFEBE7E7)
val surfaceContainerHighestLight = Color(0xFFE5E2E1)

val primaryDark = Color(0xFFC8C6C5)
val onPrimaryDark = Color(0xFF303030)
val primaryContainerDark = Color(0xFF1F1F1F)
val onPrimaryContainerDark = Color(0xFF888686)
val secondaryDark = Color(0xFFC7C6C6)
val onSecondaryDark = Color(0xFF303031)
val secondaryContainerDark = Color(0xFF616161)
val onSecondaryContainerDark = Color(0xFFDEDCDC)
val tertiaryDark = Color(0xFFADFAEB)
val onTertiaryDark = Color(0xFF003731)
val tertiaryContainerDark = Color(0xFF91DDCF)
val onTertiaryContainerDark = Color(0xFF056358)
val errorDark = Color(0xFFFFB3AF)
val onErrorDark = Color(0xFF68000F)
val errorContainerDark = Color(0xFFB00020)
val onErrorContainerDark = Color(0xFFFFBBB8)
val backgroundDark = Color(0xFF141313)
val onBackgroundDark = Color(0xFFE5E2E1)
val surfaceDark = Color(0xFF1E1D1D)
val onSurfaceDark = Color(0xFFE5E2E1)
val surfaceVariantDark = Color(0xFF444748)
val onSurfaceVariantDark = Color(0xFFC4C7C7)
val outlineDark = Color(0xFF8E9192)
val outlineVariantDark = Color(0xFF444748)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFE5E2E1)
val inverseOnSurfaceDark = Color(0xFF313030)
val inversePrimaryDark = Color(0xFF5F5E5E)
val surfaceDimDark = Color(0xFF141313)
val surfaceBrightDark = Color(0xFF3A3939)
val surfaceContainerLowestDark = Color(0xFF0E0E0E)
val surfaceContainerLowDark = Color(0xFF1C1B1B)
val surfaceContainerDark = Color(0xFF201F1F)
val surfaceContainerHighDark = Color(0xFF2A2A2A)
val surfaceContainerHighestDark = Color(0xFF353434)

val IncomeDark = Color(0xFF81C784)
val IncomeLight = Color(0xFF2E7D32)
val ExpenseLight = Color(0xFFD32F2F)
val ExpenseDark = Color(0xFFE57373)

// Warna untuk Chart Kondisional
val ChartConditionGood = Color(0xFFF9B208)
val ChartConditionWarning = Color(0xFFFF0000)
val ChartConditionNeutralLight = Color(0xFF26A69A)
val ChartConditionNeutralDark = Color(0xFF26A69A)

// Palet Warna untuk Chart Kategori
val ChartCategory1 = Color(0xFFFADA7A)
val ChartCategory2 = Color(0xFF6A89A5)
val ChartCategory3 = Color(0xFF8A9A5B)
val ChartCategory4 = Color(0xFFB97B5B)
val ChartCategory5 = Color(0xFF8F85A5)
val ChartCategory6 = Color(0xFFA9B4B7)

val AccentGreenDark = Color(0xFF56DFCF)
val AccentGreenLight = Color(0xFF0ABAB5)

val OnAccentGreen = Color.Black